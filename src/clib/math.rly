export_library
{
    clib_pow    :: fn (base: c_double, exponent: c_double) -> c_double = extern "pow";
    clib_powf   :: fn (base: c_float, exponent: c_float)   -> c_float  = extern "powf";
    clib_sqrt   :: fn (num: c_double) -> c_double                      = extern "sqrt";
    clib_sqrtf  :: fn (num: c_float)  -> c_float                       = extern "sqrtf";
    clib_floor  :: fn (num: c_double) -> c_double                      = extern "floor";
    clib_floorf :: fn (num: c_float)  -> c_float                       = extern "floorf";
    clib_round  :: fn (num: c_double) -> c_double                      = extern "round";
    clib_roundf :: fn (num: c_float)  -> c_float                       = extern "roundf";
    clib_ceil   :: fn (num: c_double) -> c_double                      = extern "ceil";
    clib_ceilf  :: fn (num: c_float)  -> c_float                       = extern "ceilf";
    clib_cos    :: fn (num: c_double) -> c_double                      = extern "cos";
    clib_cosf   :: fn (num: c_float)  -> c_float                       = extern "cosf";
    clib_sin    :: fn (num: c_double) -> c_double                      = extern "sin";
    clib_sinf   :: fn (num: c_float)  -> c_float                       = extern "sinf";
    clib_tan    :: fn (num: c_double) -> c_double                      = extern "tan";
    clib_tanf   :: fn (num: c_float)  -> c_float                       = extern "tanf";
    clib_acos   :: fn (num: c_double) -> c_double                      = extern "acos";
    clib_acosf  :: fn (num: c_float)  -> c_float                       = extern "acosf";
    clib_asin   :: fn (num: c_double) -> c_double                      = extern "asin";
    clib_asinf  :: fn (num: c_float)  -> c_float                       = extern "asinf";
    clib_atan   :: fn (num: c_double) -> c_double                      = extern "atan";
    clib_atanf  :: fn (num: c_float)  -> c_float                       = extern "atanf";
    clib_atan2  :: fn (y: c_double, x: c_double) -> c_double           = extern "atan2";
    clib_atan2f :: fn (y: c_float,  x: c_float)  -> c_float            = extern "atan2f";
    clib_cosh   :: fn (num: c_double) -> c_double                      = extern "cosh";
    clib_coshf  :: fn (num: c_float)  -> c_float                       = extern "coshf";
    clib_sinh   :: fn (num: c_double) -> c_double                      = extern "sinh";
    clib_sinhf  :: fn (num: c_float)  -> c_float                       = extern "sinhf";
    clib_tanh   :: fn (num: c_double) -> c_double                      = extern "tanh";
    clib_tanhf  :: fn (num: c_float)  -> c_float                       = extern "tanhf";
    clib_acosh  :: fn (num: c_double) -> c_double                      = extern "acosh";
    clib_acoshf :: fn (num: c_float)  -> c_float                       = extern "acoshf";
    clib_asinh  :: fn (num: c_double) -> c_double                      = extern "asinh";
    clib_asinhf :: fn (num: c_float)  -> c_float                       = extern "asinhf";
    clib_atanh  :: fn (num: c_double) -> c_double                      = extern "atanh";
    clib_atanhf :: fn (num: c_float)  -> c_float                       = extern "atanhf";
    clib_abs    :: fn (num: c_int)    -> c_int                         = extern "abs";
    clib_fabs   :: fn (num: c_double) -> c_double                      = extern "fabs";
    clib_log10  :: fn (value: c_double) -> c_double                    = extern "log10";
    clib_log10f :: fn (value: c_float) -> c_float                      = extern "log10f";
    clib_modf   :: fn (x: c_double, int_part: c_double&) -> c_double   = extern "modf";
    clib_modff  :: fn (x: c_float, int_part: c_float&) -> c_float      = extern "modff";
    clib_exp    :: fn (x: c_double) -> c_double                        = extern "exp";
    clib_expf   :: fn (x: c_float) -> c_float                          = extern "expf";
    clib_exp2   :: fn (x: c_double) -> c_double                        = extern "exp2";
    clib_exp2f  :: fn (x: c_float) -> c_float                          = extern "exp2f";
    clib_expm1  :: fn (x: c_double) -> c_double                        = extern "expm1";
    clib_expm1f :: fn (x: c_float) -> c_float                          = extern "expm1f";
}
